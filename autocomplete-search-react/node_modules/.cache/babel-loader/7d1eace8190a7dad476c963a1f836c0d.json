{"ast":null,"code":"var _jsxFileName = \"/home/jishi/Documents/maps/src/components/Map.js\";\nimport React from 'react';\nimport PlacesAutoComplete from 'react-native-places-autocomplete';\n\nvar SearchBar = require('react-native-search-bar'); // Optional but recommended on iOS\n\n\nexport default class SearchPlace extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(View, {\n      style: {\n        flex: 1,\n        marginTop: 64\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(PlacesAutoComplete, {\n      apikey: \"YAIzaSyBDY_5OvQH1C8xF8Ur-q1v55kBoSGOCDhE\",\n      rankby: \"distance\",\n      radius: \"500\",\n      type: \"restaurant|department_store|pharmacy|night_club|movie_theater|bowling_alley|book_store|meal_delivery|meal_takeaway|lodging|bar\",\n      iconColor: \"#FC1D47\",\n      merchantNameColor: \"#37383B\",\n      searchText: this.state.searchText,\n      searchInput: /*#__PURE__*/React.createElement(SearchBar, {\n        ref: \"searchBar\",\n        placeholder: \"Search\",\n        onChangeText: text => {\n          console.log(text);\n          this.setState({\n            searchText: text\n          });\n        },\n        onSearchButtonPress: () => {},\n        onCancelButtonPress: () => {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }\n      }),\n      onSelect: details => {\n        // When you select a merchant this will be triggered.\n        console.log(details);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/jishi/Documents/maps/src/components/Map.js"],"names":["React","PlacesAutoComplete","SearchBar","require","SearchPlace","Component","constructor","props","state","render","flex","marginTop","searchText","text","console","log","setState","details"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,kCAA/B;;AAEA,IAAIC,SAAS,GAAGC,OAAO,CAAC,yBAAD,CAAvB,C,CAAoD;;;AAEpD,eAAe,MAAMC,WAAN,SAA0BJ,KAAK,CAACK,SAAhC,CAA0C;AACrDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa,EAAb;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACC,QAAAA,IAAI,EAAE,CAAP;AAAUC,QAAAA,SAAS,EAAE;AAArB,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,kBAAD;AACI,MAAA,MAAM,EAAC,0CADX;AAEI,MAAA,MAAM,EAAC,UAFX;AAGI,MAAA,MAAM,EAAC,KAHX;AAII,MAAA,IAAI,EAAC,gIAJT;AAKI,MAAA,SAAS,EAAC,SALd;AAMI,MAAA,iBAAiB,EAAC,SANtB;AAOI,MAAA,UAAU,EAAE,KAAKH,KAAL,CAAWI,UAP3B;AAQI,MAAA,WAAW,eACP,oBAAC,SAAD;AACI,QAAA,GAAG,EAAC,WADR;AAEI,QAAA,WAAW,EAAC,QAFhB;AAGI,QAAA,YAAY,EAAEC,IAAI,IAAI;AAClBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,eAAKG,QAAL,CAAc;AAACJ,YAAAA,UAAU,EAAEC;AAAb,WAAd;AACH,SANL;AAOI,QAAA,mBAAmB,EAAE,MAAK,CACzB,CARL;AASI,QAAA,mBAAmB,EAAE,MAAK,CACzB,CAVL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATR;AAsBI,MAAA,QAAQ,EAAGI,OAAD,IAAY;AAAE;AACpBH,QAAAA,OAAO,CAACC,GAAR,CAAYE,OAAZ;AACH,OAxBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AA8BH;;AAtCoD","sourcesContent":["import React from 'react';\nimport PlacesAutoComplete from 'react-native-places-autocomplete'\n\nvar SearchBar = require('react-native-search-bar'); // Optional but recommended on iOS\n\nexport default class SearchPlace extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {}\n    }\n\n    render() {\n        return (\n            <View style={{flex: 1, marginTop: 64}}>\n                <PlacesAutoComplete\n                    apikey=\"YAIzaSyBDY_5OvQH1C8xF8Ur-q1v55kBoSGOCDhE\"\n                    rankby=\"distance\"\n                    radius=\"500\"\n                    type=\"restaurant|department_store|pharmacy|night_club|movie_theater|bowling_alley|book_store|meal_delivery|meal_takeaway|lodging|bar\"\n                    iconColor=\"#FC1D47\"\n                    merchantNameColor=\"#37383B\"\n                    searchText={this.state.searchText}\n                    searchInput={\n                        <SearchBar\n                            ref='searchBar'\n                            placeholder='Search'\n                            onChangeText={text => {\n                                console.log(text);\n                                this.setState({searchText: text});\n                            }}\n                            onSearchButtonPress={()=> {\n                            }}\n                            onCancelButtonPress={()=> {\n                            }}\n                        />\n                    }\n                    onSelect={(details)=> { // When you select a merchant this will be triggered.\n                        console.log(details);\n                    }}\n                />\n            </View>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}